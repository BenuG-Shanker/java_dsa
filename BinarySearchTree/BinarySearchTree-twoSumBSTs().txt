import java.util.*;
public class Main{
	public static class Node{
		int data;
		Node left;
		Node right;
		public Node(int data){
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}
	public static int count;
	public static void twoSumBSTs(Node root1, Node root2, int x){
		if(root1==null || root2==null){
			return;
		}
		Stack<Node> s1 = new Stack<>();
		Stack<Node> s2 = new Stack<>();
		Node curr1 = root1;
		Node curr2 = root2;
		count = 0;
		while((!s1.isEmpty()||curr1!=null) && (!s2.isEmpty()||curr2!=null)){
			while(curr1!=null){
				s1.push(curr1);
				curr1 = curr1.left;
			}
			while(curr2!=null){
				s2.push(curr2);
				curr2 = curr2.right;
			}
			Node top1 = s1.peek();
			Node top2 = s2.peek();
			if(top1.data + top2.data == x){
				count++;
				s1.pop();
				s2.pop();
				curr1 = top1.right;
				curr2 = top2.left;
				System.out.print("(" + top1.data + ", " + top2.data + ") ");
			}
			else if(top1.data + top2.data < x){
				s1.pop();
				curr1 = top1.right;
			}
			else{
				s2.pop();
				curr2 = top2.left;
			}
		}
	}
	public static void main(String[] args){
		Node root1 = new Node(5);
		root1.left = new Node(3);
		root1.right = new Node(7);
		root1.left.left = new Node(2);
		root1.left.right = new Node(4);
		root1.right.left = new Node(6);
		root1.right.right = new Node(8);
		Node root2 = new Node(10);
		root2.left = new Node(6);
		root2.right = new Node(15);
		root2.left.left = new Node(3);
		root2.left.right = new Node(8);
		root2.right.left = new Node(11);
		root2.right.right = new Node(18);
		int x = 16;
		twoSumBSTs(root1, root2, x);
		System.out.println();
		System.out.print(count);
	}
}