import java.util.*;
public class Main{
	public static class Node{
		int data;
		Node left;
		Node right;
		public Node(int data){
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}
	public static Node insert(Node root, int key){
		if(root == null){
			return new Node(key);
		}
		if(key < root.data){
			root.left = insert(root.left, key);
		}
		if(key > root.data){
			root.right = insert(root.right, key);
		}
		return root;
	}
	public static int sum = 0;
	public static int bstRangeSum(Node root, int l, int r){
		if(root == null){
			return 0;
		}
		Queue<Node> q = new LinkedList<>();
		q.add(root);
		while(q.isEmpty() == false){
			Node curr = q.remove();
			if(curr.data>=l && curr.data<=r){
				sum = sum + curr.data;
			}
			if(curr.left!=null && curr.data>l){
				q.add(curr.left);
			}
			if(curr.right!=null && curr.data<r){
				q.add(curr.right);
			}
		}
		return sum;
	}
	public static void main(String[] args){
		Node root = null;
		root = insert(root, 10);
		root = insert(root, 5);
		root = insert(root, 3);
		root = insert(root, 7);
		root = insert(root, 15);
		root = insert(root, 17);
		System.out.println(bstRangeSum(root, 7, 15));
	}
}