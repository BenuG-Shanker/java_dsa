public class Main{
	public static int minimum_difference = Integer.MAX_VALUE;
	public static int minimum_difference_data = -1;
	public static class Node{
		int data;
		Node left;
		Node right;
		public Node(int data){
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}
	public static void findClosestElementinBST(Node root, int k){
		if(root == null){
			return;
		}
		if(root.data == k){
			minimum_difference_data = k;
			return;
		}
		if(minimum_difference > Math.abs(root.data - k)){
			minimum_difference = Math.abs(root.data - k);
			minimum_difference_data = root.data;
		}
		if(k < root.data){
			findClosestElementinBST(root.left, k);
		}
		else{
			findClosestElementinBST(root.right, k);
		}
	}
	public static void main(String[] args){
		Node root = new Node(9);
		root.left = new Node(4);
		root.right = new Node(17);
		root.left.left = new Node(3);
		root.left.right = new Node(6);
		root.left.right.left = new Node(5);
		root.left.right.right = new Node(7);
		root.right.right = new Node(22);
		root.right.right.left = new Node(20);
		int k = 18;
		findClosestElementinBST(root, k);
		System.out.println(minimum_difference_data);
	}
}