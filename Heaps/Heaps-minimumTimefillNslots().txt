import java.util.LinkedList;
import java.util.Queue;
public class Main{
	public static void minimumTimefillNslots(int[] arr, int n, int k){
		Queue<Integer> q = new LinkedList<>();
		boolean[] visited = new boolean[n + 1];
		int time = 0;
		for(int i=0; i<k; i++){
			q.add(arr[i]);
			visited[arr[i]] = true;
		}
		while(!q.isEmpty()){
			int size = q.size();
			for(int i=0; i<size; i++){
				int curr = q.poll();
				if(curr-1>=1 && !visited[curr-1]){
					q.add(curr - 1);
					visited[curr - 1] = true;
				}
				if(curr+1<=n && !visited[curr+1]){
					q.add(curr + 1);
					visited[curr + 1] = true;
				}
			}
			if(!q.isEmpty()){
				time++;
			}
		}
		System.out.println(time);
	}
	public static void main(String[] args){
		int n = 6;
		int[] arr = {2, 6};
		int k = arr.length;
		minimumTimefillNslots(arr, n, k);
	}
}